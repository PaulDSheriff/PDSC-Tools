#nullable disable

using Microsoft.AspNetCore.Mvc;
using PDSC.Common;
using <|NAMESPACE|>.Common;
using <|NAMESPACE|>.EntityLayer;
using <|NAMESPACE|>.ViewModelLayer;

namespace <|NAMESPACE|>.Controllers
{
  public class <|CLASS_NAME|><|OUTPUT_SUFFIX|> : AppController
  {
    {|REMOVE_WHEN:IsPrimaryKeyNotInteger|}
    public <|CLASS_NAME|><|OUTPUT_SUFFIX|>(IRepository<<|CLASS_NAME|>, <|CLASS_NAME|>Search> repo)
    {|END_REMOVE|}
    {|REMOVE_WHEN:IsPrimaryKeyInteger|}
    public <|CLASS_NAME|><|OUTPUT_SUFFIX|>(IRepositoryOtherPK<<|PK_LANGUAGE_DATA_TYPE_NEVER_NULLABLE|>, <|CLASS_NAME|>, <|CLASS_NAME|>Search> repo)
    {|END_REMOVE|}
    {
      _Repo = repo;
    }

    {|REMOVE_WHEN:IsPrimaryKeyNotInteger|}
    private readonly IRepository<<|CLASS_NAME|>, <|CLASS_NAME|>Search> _Repo;
    {|END_REMOVE|}
    {|REMOVE_WHEN:IsPrimaryKeyInteger|}
    private readonly IRepositoryOtherPK<<|PK_LANGUAGE_DATA_TYPE_NEVER_NULLABLE|>, <|CLASS_NAME|>, <|CLASS_NAME|>Search> _Repo;
    {|END_REMOVE|}

    [HttpGet]
    public IActionResult <|CLASS_NAME|>Index()
    {
      // Create view model, passing in repository
      <|CLASS_NAME|>ViewModel vm = new(_Repo);
      
      // Initialize View Model
      Init(vm);

      // Restore Search Data
      vm.RestoreSearchFromJson();

      // Call method to load data
      vm.Search();

      return View(vm);
    }

    [HttpPost]
    public IActionResult <|CLASS_NAME|>Index(<|CLASS_NAME|>ViewModel vm)
    {
      // Assign Repository to View Model
      vm.Repository = _Repo;
      
      // Initialize View Model
      Init(vm);

      // Validate model and save data
      if (ModelState.IsValid)
      {
        // Save the <|CLASS_NAME|>
        vm.Save();

        // Redirect back to <|CLASS_NAME|> list
        return RedirectToAction("<|CLASS_NAME|>Index");
      }
      else
      {
        vm.IsDetailVisible = true;

        return View(vm);
      }
    }

    [HttpGet]
    public IActionResult <|CLASS_NAME|>Search(<|CLASS_NAME|>ViewModel vm)
    {
      // Assign Repository to View Model
      vm.Repository = _Repo;
      
      // Initialize View Model
      Init(vm);

      // Reset Pager
      vm.ResetPagerProperties();

      // Call method to search for data
      vm.Search();

      return View("<|CLASS_NAME|>Index", vm);
    }
    
    #region SortPage Method
    [HttpGet]
    public IActionResult SortPage(<|CLASS_NAME|>ViewModel vm) {
      // Assign Repository to View Model
      vm.Repository = _Repo;

      // Initialize View Model
      Init(vm);

      // Restore Search Data
      vm.RestoreSearchFromJson();

      // Call method to sort data
      vm.Search();

      // Reset model state to force new variables to be written
      ModelState.Clear();

      return View("<|CLASS_NAME|>Index", vm);
    }
    #endregion

    [HttpGet]
    public IActionResult <|CLASS_NAME|>Add()
    {
      // Create view model, passing in repository
      <|CLASS_NAME|>ViewModel vm = new(_Repo)
      {
        IsDetailVisible = true
      };
      
      // Initialize View Model
      Init(vm);

      // Call method to create an empty <|CLASS_NAME|> object
      vm.CreateEmpty();

      return View("<|CLASS_NAME|>Index", vm);
    }
    
    [HttpGet]
    public IActionResult <|CLASS_NAME|>Edit(<|PK_LANGUAGE_DATA_TYPE_NEVER_NULLABLE|> id)
    {
      // Create view model, passing in repository
      <|CLASS_NAME|>ViewModel vm = new(_Repo);
      
      // Initialize View Model
      Init(vm);

      // Call method to load a single <|CLASS_NAME|> object
      vm.Get(id);

      return View("<|CLASS_NAME|>Index", vm);
    }

    [HttpGet]
    public IActionResult <|CLASS_NAME|>Delete(<|PK_LANGUAGE_DATA_TYPE_NEVER_NULLABLE|> id)
    {
      // Create view model, passing in repository
      <|CLASS_NAME|>ViewModel vm = new(_Repo);
      
      // Initialize View Model
      Init(vm);

      // Call method to delete a single <|CLASS_NAME|> object
      vm.Delete(id);

      return RedirectToAction("<|CLASS_NAME|>Index");
    }
  }
}
