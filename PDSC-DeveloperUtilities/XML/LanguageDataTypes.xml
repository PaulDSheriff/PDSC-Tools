<?xml version="1.0" encoding="utf-8"?>
<DataTypes>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>bit</SqlServerType>
		<LanguageType>bool</LanguageType>
		<Nullable>bool?</Nullable>
		<Initializer>false</Initializer>
		<ConversionMethod>ToBoolean</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} == search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>tinyint</SqlServerType>
		<LanguageType>byte</LanguageType>
		<Nullable>byte?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod></ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} == search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>uniqueidentifier</SqlServerType>
		<LanguageType>Guid</LanguageType>
		<Nullable>Guid?</Nullable>
		<Initializer>new System.Guid()</Initializer>
		<ConversionMethod></ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} == search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType></SqlServerType>
		<LanguageType>char</LanguageType>
		<Nullable>char?</Nullable>
		<Initializer></Initializer>
		<ConversionMethod>ToChar</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} == search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>date,datetime,datetime2,datetimeoffset,smalldatetime</SqlServerType>
		<LanguageType>DateTime</LanguageType>
		<Nullable>DateTime?</Nullable>
		<Initializer>System.DateTime.Now</Initializer>
		<ConversionMethod>ToDateTime</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} == search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>decimal,money,smallmoney,numeric</SqlServerType>
		<LanguageType>decimal</LanguageType>
		<Nullable>decimal?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToDecimal</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} >= search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>float</SqlServerType>
		<LanguageType>double</LanguageType>
		<Nullable>double?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToDouble</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} >= search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>int</SqlServerType>
		<LanguageType>int</LanguageType>
		<Nullable>int?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToInt32</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} >= search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>bigint</SqlServerType>
		<LanguageType>long</LanguageType>
		<Nullable>long?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToInt64</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} >= search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>binary,varbinary,image,filestream,timestamp</SqlServerType>
		<LanguageType>byte[]</LanguageType>
		<Nullable>byte[]</Nullable>
		<Initializer>null</Initializer>
		<ConversionMethod>ToByteArray</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>sql_variant</SqlServerType>
		<LanguageType>object</LanguageType>
		<Nullable>object</Nullable>
		<Initializer>null</Initializer>
		<ConversionMethod>ToObject</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType></SqlServerType>
		<LanguageType>sbyte</LanguageType>
		<Nullable>sbyte?</Nullable>
		<Initializer></Initializer>
		<ConversionMethod>ToByte</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} == search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>smallint</SqlServerType>
		<LanguageType>short</LanguageType>
		<Nullable>short?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToInt16</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} >= search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>real</SqlServerType>
		<LanguageType>Single</LanguageType>
		<Nullable>Single?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToSingle</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} >= search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType>text,ntext,char,nchar,varchar,nvarchar,xml</SqlServerType>
		<LanguageType>string</LanguageType>
		<Nullable>string</Nullable>
		<Initializer>string.Empty</Initializer>
		<ConversionMethod>ToString</ConversionMethod>
		<SearchPattern>string.IsNullOrEmpty(search.{|PROPERTY_NAME|}) ? true : prop.{|PROPERTY_NAME|}.StartsWith(search.{|PROPERTY_NAME|})</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType></SqlServerType>
		<LanguageType>uint</LanguageType>
		<Nullable>unit?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToUInt32</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} >= search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType></SqlServerType>
		<LanguageType>ulong</LanguageType>
		<Nullable>ulong?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToUInt64</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} >= search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>CSharp</LanguageCode>
		<SqlServerType></SqlServerType>
		<LanguageType>ushort</LanguageType>
		<Nullable>ushort?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToUInt16</ConversionMethod>
		<SearchPattern>prop.{|PROPERTY_NAME|} >= search.{|PROPERTY_NAME|}</SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>bit</SqlServerType>
		<LanguageType>Boolean</LanguageType>
		<Nullable>Boolean?</Nullable>
		<Initializer>False</Initializer>
		<ConversionMethod>ToBoolean</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>tinyint</SqlServerType>
		<LanguageType>Byte</LanguageType>
		<Nullable>Byte?</Nullable>
		<Initializer></Initializer>
		<ConversionMethod>ToByte</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType></SqlServerType>
		<LanguageType>Char</LanguageType>
		<Nullable>Char?</Nullable>
		<Initializer></Initializer>
		<ConversionMethod>ToChar</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>date,datetime,datetime2,datetimeoffset,smalldatetime</SqlServerType>
		<LanguageType>DateTime</LanguageType>
		<Nullable>DateTime?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToDateTime</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>decimal,money,smallmoney,numeric</SqlServerType>
		<LanguageType>Decimal</LanguageType>
		<Nullable>Decimal?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToDecimal</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>float</SqlServerType>
		<LanguageType>Double</LanguageType>
		<Nullable>Double?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToDouble</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>int</SqlServerType>
		<LanguageType>Integer</LanguageType>
		<Nullable>Integer?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToInt32</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>bigint</SqlServerType>
		<LanguageType>Long</LanguageType>
		<Nullable>Long?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToInt64</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>binary,varbinary,image,filestream,timestamp</SqlServerType>
		<LanguageType>byte[]</LanguageType>
		<Nullable>byte[]</Nullable>
		<Initializer>null</Initializer>
		<ConversionMethod>ToByteArray</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>sql_variant</SqlServerType>
		<LanguageType>Object</LanguageType>
		<Nullable>Object?</Nullable>
		<Initializer>Nothing</Initializer>
		<ConversionMethod>ToObject</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>smallint</SqlServerType>
		<LanguageType>Short</LanguageType>
		<Nullable>Short?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToInt16</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>real</SqlServerType>
		<LanguageType>Single</LanguageType>
		<Nullable>Single?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>ToSingle</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>VBNET</LanguageCode>
		<SqlServerType>text,ntext,char,nchar,varchar,nvarchar,xml</SqlServerType>
		<LanguageType>String</LanguageType>
		<Nullable>String?</Nullable>
		<Initializer>String.Empty</Initializer>
		<ConversionMethod>ToString</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>TypeScript</LanguageCode>
		<SqlServerType>text,ntext,char,nchar,varchar,nvarchar,xml</SqlServerType>
		<LanguageType>string</LanguageType>
		<Nullable>string?</Nullable>
		<Initializer>""</Initializer>
		<ConversionMethod>String</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>TypeScript</LanguageCode>
		<SqlServerType>real,smallint,tinyint,decimal,money,smallmoney,numeric,float,int,bigint</SqlServerType>
		<LanguageType>number</LanguageType>
		<Nullable>number?</Nullable>
		<Initializer>0</Initializer>
		<ConversionMethod>Number</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>TypeScript</LanguageCode>
		<SqlServerType>bit</SqlServerType>
		<LanguageType>boolean</LanguageType>
		<Nullable>boolean?</Nullable>
		<Initializer>false</Initializer>
		<ConversionMethod>Boolean</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>TypeScript</LanguageCode>
		<SqlServerType>date,datetime,datetime2,datetimeoffset,smalldatetime</SqlServerType>
		<LanguageType>Date</LanguageType>
		<Nullable>Date?</Nullable>
		<Initializer>new Date()</Initializer>
		<ConversionMethod>Date()</ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>TypeScript</LanguageCode>
		<SqlServerType>binary,varbinary,image,filestream,timestamp</SqlServerType>
		<LanguageType>any[]</LanguageType>
		<Nullable>any[]</Nullable>
		<Initializer>null</Initializer>
		<ConversionMethod></ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
	<DataType>
		<LanguageCode>TypeScript</LanguageCode>
		<SqlServerType>uniqueidentifier,sql_variant</SqlServerType>
		<LanguageType>any</LanguageType>
		<Nullable>any</Nullable>
		<Initializer>null</Initializer>
		<ConversionMethod></ConversionMethod>
		<SearchPattern></SearchPattern>
	</DataType>
</DataTypes>