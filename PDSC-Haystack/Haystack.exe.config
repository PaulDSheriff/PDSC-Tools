<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="PDSADataProviders" type="PDSA.DataLayer.Configuration.PDSADataSectionHandler, PDSC.DataLayer"/>
    <section name="PDSADBSchemaProviders" type="PDSA.DataLayer.Schema.Configuration.PDSADBSchemaSectionHandler, PDSC.DataLayer"/>
  </configSections>
  <appSettings>
    <!-- ************************************************ -->
    <!-- Haystack Database Information -->
    <!-- ************************************************ -->
    <add key="CodeGenDBConnectString" value="Server=Localhost;Database=Haystack;Integrated Security=Yes;Application Name=Haystack"/>
    <!--<add key="CodeGenDBConnectString" value="Server=PDSA-DEVSQL2012;Database=Vehsmart_Haystack;Integrated Security=Yes;Application Name=Haystack"/>-->
    <add key="SamplesConnectString" value="Server=Localhost;Database=Sample.Project;Integrated Security=Yes;Application Name=Sample Project"/>
    <!-- The connection string used to connect to the project database from which you wish to generate classes from -->
    <add key="ProjectConnectionString" value="Server=Localhost;Database=Sample.Project;Integrated Security=Yes;Application Name=Sample Project"/>
    <!-- An Oracle connection string used to connect to the project database from which you wish to generate classes from -->
    <!-- The Provider Name used to connect to the Code Generator database -->
    <!-- This value must match a name in the <PDSADataProviders> section of this config file -->
    <add key="CodeGenDBProviderName" value="SqlClient"/>
    <!-- The DBSchema Provider Name used to connect to the project database you wish to generate classes from -->
    <!-- This value must match a name in the <PDSADBSchemaProviders> section of this config file -->
    <add key="ProjectDBSchemaProviderName" value="SqlClient"/>
    <!-- ************************************************************************* -->
    <!-- Haystack Folder Locations                                                 -->
    <!-- ************************************************************************* -->
    <!-- This folder is where you wish to generate your files into -->
    <!-- You may use the following special tokens -->
    <!-- [AppPath] = The folder where this product is installed -->
    <!--     Example: C:\Program Files\Haystack -->
    <!-- [UserAppData] = Your unique storage area for this application -->
    <!--     Example: C:\Users\<YourLoginName>\AppData\Roaming\PDSA, Inc\Haystack Code Generator for .NET\7.0.0.0 -->
    <!-- [MyDocuments] = Generate under your "My Documents" folder -->
    <!--     Example: C:\Users\<YourLoginName>\Documents -->
    <!-- NOTE: Neither of the above tokens has a trailing backslash, so you need to add one -->
    <add key="GenerationFolder" value="[MyDocuments]\Haystack\Gen"/>
    <!-- This folder is where to copy the Haystack.exe.config file on the first time Haystack runs -->
    <add key="ConfigFileLocation" value="[MyDocuments]\Haystack"/>
    <!-- This folder is where to copy the Haystack.xml file on the first time Haystack runs -->
    <add key="HaystackConnectionsLocation" value="[MyDocuments]\Haystack"/>
    <!-- This folder is where all the templates for the Haystack are located -->
    <!-- This location is typically under the folder where the Haystack is installed -->
    <add key="TemplatesFolder" value="[AppPath]\Templates"/>
    <!-- The folder where all Haystack Configuration XML files are located -->
    <add key="XmlFolder" value="[AppPath]\Xml\"/>
    <!-- The folder where all Haystack Configuration XSD files are located -->
    <add key="XsdFolder" value="[AppPath]\Xsd\"/>
    <!-- ************************************************************************* -->
    <!-- Default Project Information -->
    <!-- These values below are the defaults used when creating a new project only -->
    <!-- ************************************************************************* -->
    <!-- A Default Project Name -->
    <add key="ProjectName" value="Sample Project"/>
    <!-- A Default Project Namespace -->
    <add key="ProjectNamespace" value="Sample.Project"/>
    <!-- A Default Project Description -->
    <add key="ProjectDesc" value="Sample Project"/>
    <!-- Your Name -->
    <add key="Author" value="Joe Programmer"/>
    <!-- Your Company Name -->
    <add key="Company" value="Your Company"/>
    <!-- Your Copyright. There are two replaceable parameters that will pull current information at generation time. -->
    <add key="Copyright" value="Copyright Â© {YEAR} by {COMPANY}"/>
    <!-- Set to True if you want to use Nullable Types in your generated Entity classes -->
    <add key="UseNullableTypes" value="True"/>
    <!-- Set to True if you want to default to using the Data Access Layer -->
    <add key="UseDataAccessLayer" value="False"/>
    <!-- Set to True if you want to use Dynamic SQL in your generated classes -->
    <add key="ClassUsesDynamicSQL" value="True"/>
    <!-- Set to True if you want to use stored procedures in your generated classes -->
    <add key="ClassUsesStoredProcs" value="False"/>
    <!-- The default schema name used to filter tables/views/stored procs when reading from the database -->
    <add key="DefaultSchemaName" value=""/>
    <!-- Default Stored Procedure Prefix -->
    <add key="DefaultStoredProcPrefix" value="usp_"/>
    <!-- The default language you wish to generate in. This value must match the 'Code' element in the Languages.xml file -->
    <add key="GenerationLanguageCode" value="CS"/>
    <!-- Set to True if you wish to wrap all table and column names within the IdentifierPrefix and Identifier Suffix -->
    <add key="WrapIdentifiers" value="False"/>
    <!-- The Prefix character to wrap table and column names within -->
    <add key="IdentifierPrefix" value=""/>
    <!-- The Suffix character to wrap table and column names within -->
    <add key="IdentifierSuffix" value=""/>
    <!-- Any Suffix you wish to append to all generated classes -->
    <add key="ClassNameSuffix" value=""/>
    <!-- Set to true to prefix all column names with the object name. Example: Product.ProductName -->
    <add key="PrefixColumnsWithObjectName" value="False"/>
    <!-- Set to true to prefix all object names with the schema name. Example: MySchema.MyTable -->
    <add key="PrefixObjectsWithSchema" value="True"/>
    <!-- Set to true to prefix all schema names with the catalog name. Example: MyCatalog.MySchema.Product -->
    <add key="PrefixObjectsWithCatalog" value="False"/>
    <!-- Set to a character you wish to prefix all generated private variable with -->
    <add key="PrivateVariablePrefix" value="_"/>
    <!-- Set to true to remove any underscores from table or column names -->
    <add key="RemoveUnderscores" value="True"/>
    <!-- A default message used for business rule failures for any required fields found in your table -->
    <add key="RequiredMessage" value="{0} must be filled in."/>
    <!-- A default message used for business rule failures for any regular expressions used on columns -->
    <add key="RegularExpressionMessage" value="The format for {0} is not correct."/>
    <!-- The file extension used for any generated SQL files -->
    <add key="SqlFileExtension" value=".sql"/>
    <!-- Set to true to remove any prefixes found on columns in your tables. The Prefixes.xml file contains the list of prefixes that are looked for. -->
    <add key="UsePrefixReplacement" value="False"/>
    <!-- Set to true to turn on Audit Tracking for the generated data class -->
    <add key="UseAuditTracking" value="False"/>
    <!-- Set to true if you wish any generated private variables to use the prefix defined in the xx_DotNetTypes.xml file -->
    <add key="UseDotNetTypePrefixes" value="False"/>
    <!-- Set to true if you want to load all related foreign key tables when they are detected in another table. This allows Haystack to generate combo boxes/drop downs for any related table keys. It also will generate a GetBy???? method in the Manager class. -->
    <add key="AutoLoadForeignKeyTables" value="False"/>
    <!-- The folder under the 'GenerationFolder' where all SQL files -->
    <!-- such as stored procedures will be generated to -->
    <add key="SqlGenerateToSubFolder" value="SQL"/>
    <!-- ************************************************ -->
    <!-- Haystack Application Information -->
    <!-- ************************************************ -->
    <!-- The Project ID you were last using in your previous session of Haystack -->
    <add key="LastProjectId" value="0"/>
    <!-- The Project Name you were last using in your previous session of Haystack -->
    <add key="LastProjectName" value="Sample Project"/>
    <!-- Set to True to display 'verbose' info messages when running Haystack -->
    <add key="DisplayAllInfoMessages" value="False"/>
    <!-- Set to True to display tip Screen After Generation -->
    <add key="DisplayTipAfterGenerate" value="False"/>
    <!-- Set to Folder where Tips are located -->
    <add key="TipsFolder" value="[AppPath]\Documentation\Tips"/>
    <!-- Set this to a non-zero, positive value. This is used to help troubleshoot errors in templates. For example, if you forget an {|END|} statement, then the parser will most likely pick up the next lines till it finds the next {|END|} statement. This will most likely be many lines. Normally an loop statement will only be approximately 3-20 lines. Set this number to a number greater than your largest set of statements within a loop. Then if you forget an {|END|} statement, an exception message will be reported in the messages when generating. -->
    <add key="MaxLoopLinesTillException" value="100"/>
    <!-- Set this to the max number of tables/views/SPs that you want Haystack to load. If there are more than this, then Haystack will force you to filter the objects. -->
    <add key="MaxObjectsToLoad" value="2000"/>
    <!-- The name of the XML file that holds the different UI Controls to be generated -->
    <add key="UIControlsXmlFileName" value="UIControls"/>
    <!-- The name of the XSD file that holds the schema information for the UIControls.xml file -->
    <add key="UIControlsXsdFileName" value="UIControls"/>
    <!-- The name of the XSD file that holds the schema information for the ???Controls.xml file -->
    <add key="ControlsXsdFileName" value="Controls"/>
    <!-- The name of the XML file that holds the supported database servers for Haystack -->
    <add key="DatabaseServersFile" value="DatabaseServers"/>
    <!-- The name of the XSD file that holds the schema information for the DatabaseServers.xml file -->
    <add key="DatabaseServersXsdFile" value="DatabaseServers"/>
    <!-- The name of the XML file that holds the Regular Expressions for Haystack -->
    <add key="RegularExpressionsFile" value="RegularExpressions"/>
    <!-- The name of the XSD file that holds the schema information for the DatabaseServers.xml file -->
    <add key="RegularExpressionsXsdFile" value="RegularExpressions"/>
    <!-- The name of the XML file that holds the Copy After Generation Rules for Haystack -->
    <add key="CopyAfterGenFile" value="CopyAfterGen"/>
    <!-- The name of the XSD file that holds the schema information for the CopyAfterGen.xml file -->
    <add key="CopyAfterGenXsdFile" value="CopyAfterGen"/>
    <!-- The name of the XML file that holds the types of stored procedures that are generated. -->
    <add key="SPGenerateTypesXmlFile" value="StoredProcGenerateTypes"/>
    <!-- The name of the XSD file that holds the schema information for the StoredProcGenerateTypes.xml file -->
    <add key="SPGenerateTypesXsdFile" value="StoredProcGenerateTypes"/>
    <!-- The name of the XSD File that holds the schema information for the xx_DBTypesExcludes.xml file -->
    <add key="DBTypesExcludesXsdFile" value="DBTypesExcludes"/>
    <!-- The name of the XSD File that holds the schema information for the xx_DBTypes.xml file -->
    <add key="DBTypesXsdFile" value="DBTypes"/>
    <!-- The name of the XSD File that holds the schema information for the xx_DotNetTypes.xml file -->
    <add key="DotNetTypesXsdFile" value="DotNetTypes"/>
    <!-- The name of the XSD File that holds the schema information for the xx_SPSettings.xml file -->
    <add key="SPSettingsXsdFile" value="SPSettings"/>
    <!-- The name of the XSD file that holds the schema information for the xx_Templates.xml files -->
    <add key="TemplatesXsdFile" value="Templates"/>
    <!-- The name of the XML file that holds the supported .NET Languages for Haystack -->
    <add key="LanguagesFile" value="Languages"/>
    <!-- The name of the XSD file that holds the schema information for the supported .NET Languages for Haystack -->
    <add key="LanguagesXsdFile" value="Languages"/>
    <!-- The name of the XML file that holds the Prefix replacements -->
    <add key="PrefixesFile" value="Prefixes"/>
    <!-- The name of the XSD file that holds the schema information for the Prefix replacements XML file -->
    <add key="PrefixesXsdFile" value="Prefixes"/>
    <!-- The name of the XSD file for Template Groups -->
    <add key="TemplateGroupsXsdFile" value="TemplateGroups"/>
    <!-- The name of the XML file that holds the Reserved words replacements -->
    <add key="ReservedWordsFile" value="ReservedWords"/>
    <!-- The name of the XSD file that holds the schema information for the Reserved words replacements XML file -->
    <add key="ReservedWordsXsdFile" value="ReservedWords"/>
    <!-- The name of the XML file that holds the Standards Field List -->
    <add key="StandardFieldsFile" value="StandardFieldList"/>
    <!-- The name of the XSD file that holds the schema information for the Standards Field List -->
    <add key="StandardFieldsXsdFile" value="StandardFieldList"/>
    <!-- The name of the XML file that holds the Project Types List -->
    <add key="ProjectTypesFile" value="ProjectTypes"/>
    <!-- The name of the XSD file that holds the schema information for the Project Types List -->
    <add key="ProjectTypesXsdFile" value="ProjectTypes"/>
    <!-- The name of the Help file that is displayed from the Haystack Help Menu -->
    <add key="HelpFileName" value="[AppPath]\Documentation\Haystack.html"/>
    <!-- The name of the DLL Reference Help file that is displayed from the Haystack Help Menu -->
    <add key="DLLHelpFileName" value="[AppPath]\Documentation\Haystack.chm"/>
    <!-- The Folder for Database Scripts -->
    <add key="SqlScriptsFolder" value="[AppPath]\SqlScripts"/>
    <!-- The name of the Readme file -->
    <add key="ReadmeFileName" value="[AppPath]\Documentation\DataAccessLayer\Ch02-Installation.pdf"/>
    <!-- First Time Opening? -->
    <add key="IsFirstTime" value="True"/>
    <!-- Clean Gen Folder Prior to Generation? -->
    <add key="CleanGenFolderPriorToGeneration" value="True"/>
    <!-- Schemas to exclude from List. This can be a comma delimited list. -->
    <add key="SchemasToExclude" value="sys"/>
    <!-- Tables with prefix to exclude from List. This can be a comma delimited list. -->
    <add key="TablePrefixesToExclude" value=""/>
    <!-- Your Demo License Key. Send us this so we can extend your demo time. -->
    <add key="DemoLicenseKey" value=""/>
    <!-- The path where Haystack launches from -->
    <add key="HaystackInstallPath" value="[AppPath]"/>
    <!-- ************************************************ -->
    <!--   XML Generation Info   -->
    <!-- ************************************************ -->
    <!-- The Xml File you generated from in your previous session of the Haystack -->
    <add key="LastXmlFile" value="[AppPath]\Samples\XmlSamples\Product.xml"/>
    <!-- A suffix you wish to append to all generated XML data classes -->
    <add key="XmlClassNameSuffix" value="Xml"/>
    <add key="XmlProjectNamespace" value="Sample.Project"/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>
  </appSettings>
  <connectionStrings>
    <!-- This value will be overwritten with the 'ProjectConnectionString' element from above -->
    <add name="SqlClient" connectionString="Server=Localhost;Database=PDSCSamples;Integrated Security=Yes;Persist Security Info=False"/>
  </connectionStrings>
  <PDSADBSchemaProviders>
    <providers defaultProvider="SqlClient">
      <add providerName="SqlClient" filterOutSchemas="INFORMATION_SCHEMA,sys" userNameIsSchemaName="False" upperCaseSchemaNames="False" dataProviderName="SqlClient" type="PDSA.DataLayer.Schema.Providers.PDSADBSchemaSqlClient" assembly="PDSC.DataLayer"/>
    </providers>
  </PDSADBSchemaProviders>
  <PDSADataProviders>
    <providers defaultProvider="SqlClient">
      <add providerName="SqlClient" useStoredProcedures="false" useDBAuditTracking="false" MinDate="1753-1-1" MaxDate="2030-12-31" DBLanguage="en-US" DBDateFormat="yyyy-MM-dd HH:mm:ss" connectStringName="SqlClient" type="PDSA.DataLayer.Providers.PDSADataSqlClient" assembly="PDSC.DataLayer"/>
    </providers>
  </PDSADataProviders>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <probing privatePath="Private"/>
    </assemblyBinding>
  </runtime>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri=""/>
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400"/>
      </providers>
    </roleManager>
  </system.web>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8"/>
  </startup>
</configuration>
